/**
 * Author : A.Lepe (dev@alepe.com) - intellisrc.com
 * License: MIT
 * Version: 2.1.2
 * Updated: 2022-03-29
 * Content: Extension
 */

m2d2.load(e=>{const t=function(e,t,o,s,n,r,a){const c=new XMLHttpRequest;if(void 0===r&&(r=!1),void 0===n&&(n=function(e){console.log(e)}),o&&0===Object.entries(o).length&&(o=""),o)if(r)o=JSON.stringify(o);else switch(e.toUpperCase()){case"GET":if("string"==typeof o){const e={};e[o]="",o=e}t+=(-1!==t.indexOf("?")?"&":"?")+Object.keys(o).map(e=>e+"="+o[e]).join("&"),o="";break;default:o=Object.keys(o).map(e=>e+"="+o[e]).join("&")}return c.open(e,t,!0),a&&(c.timeout=a,c.ontimeout=function(e){n({type:"Timeout",reason:"Connection timed out",status:0})}),r?c.setRequestHeader("Content-Type","application/json"):c.setRequestHeader("Content-type","application/x-www-form-urlencoded"),c.onerror=function(e){n({type:"Connection",reason:"Connection Refused",status:0})},c.onload=function(){let e={};try{e=c.responseText?JSON.parse(c.responseText):{error:{type:"Response",reason:"Empty response",status:0}}}catch(t){e.error={type:"Parse Error",reason:t.message,status:0}}c.status>=200&&c.status<400?void 0!==s&&s(e):c.status>=400?void 0!==n&&("string"==typeof e.error&&(e.error={type:"Exception",reason:e.error,status:c.status}),n(e.error)):c.status?console.log("Received response with code: "+c.status):e.error&&n(e.error)},c.send(o),c},o={};["get","post","put","delete","connect","options","trace","patch"].forEach((function(e){o[e]=function(){let o,s,n,r,a,c;return Array.from(arguments).forEach(t=>{"string"==typeof t?o?s?console.log("Incorrect arguments passed to: "+e+" ["+o+"]. URL (or data as string) was already specified."):s=t:o=t:"object"==typeof t?s?console.log("Incorrect arguments passed to: "+e+" ["+o+"]. Possibly data was duplicated."):s=t:"function"==typeof t?n?r?console.log("Incorrect arguments passed to: "+e+" ["+o+"]. Too many functions."):r=t:n=t:"boolean"==typeof t?a?console.log("Incorrect arguments passed to: "+e+" ["+o+"]. Json flag was already specified."):a=t:"number"==typeof t?c?console.log("Incorrect arguments passed to: "+e+" ["+o+"]. Timeout was already specified."):c=t:(console.log("Incorrect arguments passed to: "+e+" ["+o+"]. Argument with type: "+typeof t+" is not accepted:"),console.log(t))}),void 0===s&&(s={}),t(e.toUpperCase(),o,s,n,r,a,c)}})),Object.assign(e,o)});