m2d2.load(e=>{const o=function(e,o,n,t,s,r){const a=new XMLHttpRequest;if(void 0===r&&(r=!1),void 0===s&&(s=function(e){console.log(e)}),n&&0===Object.entries(n).length&&(n=""),n)if(r)n=JSON.stringify(n);else switch(e.toUpperCase()){case"GET":o+=(-1!==o.indexOf("?")?"&":"?")+Object.keys(n).map(e=>e+"="+n[e]).join("&"),n="";break;default:n=Object.keys(n).map(e=>e+"="+n[e]).join("&")}a.open(e,o,!0),r?a.setRequestHeader("Content-Type","application/json"):a.setRequestHeader("Content-type","application/x-www-form-urlencoded"),a.onerror=function(e){s({type:"Connection",reason:"Connection Refused"})},a.onload=function(){let e={};try{e=a.responseText?JSON.parse(a.responseText):{error:{type:"Unknown",reason:"Unknown Error"}}}catch(o){e.error={type:"Parse Error",reason:o.message}}a.status>=200&&a.status<400?void 0!==t&&t(e):void 0!==s&&("string"==typeof e.error&&(e.error={type:"Exception",reason:e.error}),s(e.error))},a.send(n)},n={};["get","post","put","delete","connect","options","trace","patch"].forEach((function(e){n[e]=function(){let n,t,s,r,a;switch(arguments.length){case 5:"boolean"==typeof arguments[4]?a=arguments[4]:console.log("Passed JSON argument: "+arguments[4]+" is not boolean.");case 4:"function"==typeof arguments[3]?r=arguments[3]:4===arguments.length&&"boolean"==typeof arguments[3]?a=arguments[3]:console.log("Passed argument 4: "+arguments[3]+" is mistaken");case 3:"function"==typeof arguments[2]?"function"==typeof arguments[1]&&arguments.length<5?r=arguments[2]:s=arguments[2]:3===arguments.length&&"boolean"==typeof arguments[2]?a=arguments[2]:console.log("Passed argument 3: "+arguments[2]+" is mistaken");case 2:"object"==typeof arguments[1]||"string"==typeof arguments[1]?t=arguments[1]:"function"==typeof arguments[1]?s=arguments[1]:console.log("Passed argument 2: "+arguments[1]+" is mistaken");case 1:"string"==typeof arguments[0]?n=arguments[0]:Array.isArray(arguments[0])?n=arguments[0].join("/"):console.log("Passed URL: "+arguments[0]+" was not a string.");break;default:console.log("Incorrect number of arguments passed to xhr")}void 0===t&&(t={}),o(e.toUpperCase(),n,t,s,r,a)}})),Object.assign(e,n)});