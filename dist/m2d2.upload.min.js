/**
 * Author : A.Lepe (dev@alepe.com) - intellisrc.com
 * License: MIT
 * Version: 2.1.1
 * Updated: 2022-02-24
 * Content: Extension
 */

m2d2.load(e=>{function n(e,n,o){const r=[];return e=e||{},n.forEach(t=>{const l="Array"==typeof e?e.length==n.length?e[o]:e:void 0!==e[t.name]?e[t.name]:e;r.push({file:t,data:l,index:o++})}),r}function o(e,n,o,r,t){const l=new XMLHttpRequest;n=Array.from(n),l.upload.addEventListener("progress",(function(e){if(e.lengthComputable)if(r.oneByOne){const t=Math.round(100*e.loaded/e.total);r.onUpdate(t,n[0],o)}else{let o=0,t=0;n.some(n=>{o+=n.size;const l=e.loaded>=o?100:100-Math.round(100*(o-e.loaded)/n.size);return r.onUpdate(l,n,t++),o>=e.loaded})}}),!1),l.addEventListener("load",(function(e){let a={};try{a=l.responseText?JSON.parse(l.responseText):{error:{type:"Unknown",reason:"Unknown Error"}}}catch(e){a.error={type:"Parse Error",reason:e.message}}l.status>=200&&l.status<400?t(r.onResponse(a),n,o):("string"==typeof a.error&&(a.error={type:"Exception",reason:a.error}),r.onError(a.error))}),!1),l.open("POST",r.upload);const a=Array(n.length).fill(!1),s=function(e,n){const o=new FormData;return n.forEach(n=>{o.append(e,n,n.name)}),o}(e,n);let i=0;n.forEach(e=>{const n=new FileReader;n.onload=function(e){a[i++]=!0,-1===a.indexOf(!1)&&l.send(s)},n.readAsBinaryString(e)})}e.upload=function(e,r){const t=Object.assign({},{accept:"*/*",parallel:!1,field:"file",multiple:!0,maxFiles:0,maxSizeMb:0},r);r=null;let l=window._protected_reference=document.createElement("INPUT");l.name=t.field,l.type="file",1==t.multiple&&(l.multiple="multiple"),t.upload||(console.log("Upload not specified. Using current page."),t.upload=""),null==t.onDone&&(t.onDone=(e,n)=>{console.log(e)}),null==t.onError&&(t.onError=e=>{console.log("Error : "),console.log(e)}),null==t.onUpdate&&(t.onUpdate=(e,n,o)=>{console.log("Uploading : "+e+"% "+(t.oneByOne?"[ "+n.name+" ]":""))}),null==t.onResponse&&(t.onResponse=e=>e),l.addEventListener("change",()=>{if(l.files.length){if(!(0===t.maxFiles|l.files.length<=t.maxFiles))return t.onError("Max file limit exceeded. Maximum files: "+t.maxFiles),!1;if(t.onSelect){const e=[];let n=0;Array.from(l.files).forEach(o=>{e.push(URL.createObjectURL(o)),n+=o.size});const o=n/1048576;if(t.maxSizeMb&&o>t.maxSizeMb)return t.onError("Maximum size exceeded: "+Math.ceil(o)+"MB > "+t.maxSizeMb+"MB"),!1;t.onSelect(l.files,e)}new Promise(e=>{if(t.oneByOne){let r=0;const a=Array(l.files.length).fill(!1);Array.from(l.files).forEach(s=>{new o(l.name,[s],r++,t,(o,r,l)=>{a[l]=!0;const s=-1===a.indexOf(!1);t.onDone(n(o,r,l),s),s&&e()})})}else new o(l.name,l.files,0,t,(o,r,l)=>{t.onDone(n(o,r,l),!0),e()})}).then(()=>{l=window._protected_reference=void 0})}}),l.click()}});