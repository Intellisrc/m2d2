{"version":3,"sources":["m2d2.ws.src.js"],"names":["m2d2","load","$","ws","[object Object]","msg","this","webSocket","send","isObject","JSON","stringify","e","onerror","onMessage","onOpen","onClose","WebSocket","url","onopen","onclose","onmessage","res","data","parse","err","console","error","message","wsk","readyState","close","options","initRequest","request","onConnect","connected","onDisconnect","disconnected","reconnect","host","window","location","hostname","secure","port","path","replace","args","Object","assign","protocol","hostPort","uriPath","queryStr","URLSearchParams","toString","interval","setInterval","log","clearInterval","getSocket","ignore"],"mappings":"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","file":"m2d2.ws.min.js","sourcesContent":["m2d2.load(t=>{t.ws=new class{request(e){if(e)try{this.webSocket.send(t.isObject(e)?JSON.stringify(e):e)}catch(t){this.webSocket.onerror(t)}}getSocket(t,e,s){const n=new WebSocket(this.url);return n.onopen=e,n.onclose=s,n.onmessage=e=>{if(e.data)try{t(JSON.parse(e.data))}catch(t){n.onerror(t)}},n.onerror=t=>{console.error(\"Socket encountered error: \",t?t.message:\"Unknown\",\"Closing socket\");const e=n||this;1===e.readyState&&e.close()},n}connect(t,e){this.initRequest=t.request||null,this.onConnect=t.connected||(()=>{}),this.onDisconnect=t.disconnected||(()=>{}),this.reconnect=!1!==t.reconnect,this.host=t.host||window.location.hostname,this.secure=!0===t.secure,this.port=t.port||(this.secure?443:80),this.path=\"/\"+(t.path.replace(/^\\//,\"\")||\"\"),this.args=Object.assign({},t.args);const s=\"ws\"+(this.secure?\"s\":\"\")+\"://\",n=this.host+\":\"+this.port,o=this.path,c=this.args?\"?\"+new URLSearchParams(this.args).toString():\"\";this.url=s+n+o+c,this.connected=!1,this.interval=null;const i=t=>{this.connected=!0,this.request(this.initRequest),this.onConnect()},r=t=>{this.connected=!1,this.onDisconnect(),!this.interval&&this.reconnect&&(this.interval=setInterval(()=>{if(this.connected)console.log(\"Reconnected...\"),clearInterval(this.interval);else try{this.webSocket.close(),console.log(\"Reconnecting...\"),this.webSocket=this.getSocket(e,i,r)}catch(t){}},2e3))};this.webSocket=this.getSocket(e,i,r)}disconnect(){this.reconnect=!1,this.webSocket.close()}}});"]}