/**
 * Author : A.Lepe (dev@alepe.com) - intellisrc.com
 * License: MIT
 * Version: 2.1.2
 * Updated: 2022-03-25
 * Content: Extension
 */

m2d2.load(t=>{t.ws=new class{request(e){if(e)try{this.webSocket.send(t.isObject(e)?JSON.stringify(e):e)}catch(t){this.webSocket.onerror(t)}}getSocket(t,e,s){const n=new WebSocket(this.url);return n.onopen=e,n.onclose=s,n.onmessage=e=>{if(e.data)try{t(JSON.parse(e.data))}catch(t){n.onerror(t)}},n.onerror=t=>{console.error("Socket encountered error: ",t?t.message:"Unknown","Closing socket");const e=n||this;1===e.readyState&&e.close()},n}connect(t,e){this.initRequest=t.request||null,this.onConnect=t.connected||(()=>{}),this.onDisconnect=t.disconnected||(()=>{}),this.reconnect=!1!==t.reconnect,this.host=t.host||window.location.hostname,this.secure=!0===t.secure,this.port=t.port||(this.secure?443:80),this.path="/"+(t.path.replace(/^\//,"")||""),this.args=Object.assign({},t.args);const s="ws"+(this.secure?"s":"")+"://",n=this.host+":"+this.port,o=this.path,c=this.args?"?"+new URLSearchParams(this.args).toString():"";this.url=s+n+o+c,this.connected=!1,this.interval=null;const i=t=>{this.connected=!0,this.request(this.initRequest),this.onConnect()},r=t=>{this.connected=!1,this.onDisconnect(),!this.interval&&this.reconnect&&(this.interval=setInterval(()=>{if(this.connected)console.log("Reconnected..."),clearInterval(this.interval);else try{this.webSocket.close(),console.log("Reconnecting..."),this.webSocket=this.getSocket(e,i,r)}catch(t){}},2e3))};this.webSocket=this.getSocket(e,i,r)}disconnect(){this.reconnect=!1,this.webSocket.close()}}});