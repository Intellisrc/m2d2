m2d2.load(t=>{t.ws=new class{request(t){if(t)try{this.webSocket.send(JSON.stringify(t))}catch(t){this.webSocket.onerror(t)}}getSocket(t,e,n){const s=new WebSocket(this.path);return s.onopen=e,s.onclose=n,s.onmessage=e=>{if(e.data)try{t(JSON.parse(e.data))}catch(t){s.onerror(t)}},s.onerror=t=>{console.error("Socket encountered error: ",t?t.message:"Unknown","Closing socket");const e=s||this;1===e.readyState&&e.close()},s}connect(t,e){this.initRequest=t.request||null,this.onConnect=t.connected||(()=>{}),this.onDisconnect=t.disconnected||(()=>{}),this.reconnect=!1!==t.reconnect,this.host=t.host||window.location.hostname,this.secure=!0===t.secure,this.port=t.port||(this.secure?443:80),this.path="ws"+(this.secure?"s":"")+"://"+this.host+":"+this.port+"/"+(t.path||""),this.connected=!1,this.interval=null;const n=t=>{this.connected=!0,this.request(this.initRequest),this.onConnect()},s=t=>{this.connected=!1,this.onDisconnect(),!this.interval&&this.reconnect&&(this.interval=setInterval(()=>{if(this.connected)console.log("Reconnected..."),clearInterval(this.interval),this.interval=null;else try{this.webSocket.close(),console.log("Reconnecting..."),this.webSocket=this.getSocket(e,n,s)}catch(t){}},2e3))};this.webSocket=this.getSocket(e,n,s)}disconnect(){this.reconnect=!1,this.webSocket.close()}}});